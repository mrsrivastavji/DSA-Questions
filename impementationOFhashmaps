import java.util.*;

public class Classroom{
    // public static void majorityElement(int nums[]){
    //     HashMap<Integer, Integer> map=new HashMap<>();
    //     int n=nums.length;
    //     for(int i=0; i<n; i++){
    //         if(map.containsKey(nums[i])){
    //             map.put(nums[i], map.get(nums[i]) +1);
    //         }
    //         else{
    //             map.put(nums[i], value: 1);
    //         }
    //     }
        
    //     for(int key: map.keySet()){
    //         if(map.get(key)>n/3){
    //             System.out.println(key);
    //         }
    //     }
    // }
    
    // public static void main (String[] args) {
    //     int nums[]={1,3,6,1,4,1,6};
    //     majorityElement(nums);
    // }
    
    public static int union(int arr1[], int arr2[]){
        HashSet<Integer> set=new HashSet<>();
        
        for(int i=0; i<arr1.length; i++){
            set.add(arr1[i]);
        }
        
        for(int j=0; j<arr2.length; j++){
            set.add(arr2[j]);
        }
        return set.size();
    }
    public static int intersection(int arr1[], int arr2[]){
        HashSet<Integer> set=new HashSet<>();
        int count=0;
        
        for(int i=0; i<arr1.length; i++){
            set.add(arr1[i]);
        }
        
        for(int j=0; j<arr2.length; j++){
            if(set.contains(arr2[j])){
                count++;
                set.remove(arr2[j]);
            }
        }
        return count;
    }
    public static void main (String[] args) {
        int arr1[]={7,3,9};
        int arr2[]={6,3,9,2,9,4};
        System.out.println(union(arr1,arr2));
        System.out.println(intersection(arr1,arr2));
    }
}
